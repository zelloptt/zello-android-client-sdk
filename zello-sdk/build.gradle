buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
    }
}

repositories {
    jcenter()
    google()
}

apply plugin: "com.android.library"

dependencies {
    implementation "androidx.appcompat:appcompat:1.2.0"
}

def sourceAarName="zello-sdk-release.aar"
def targetAarName="zello-sdk.aar"
def sourceAarPath="build/outputs/aar/${sourceAarName}"

task zelloSdkAarDeployReleaseToRoot() {
    description "Copies SDK AAR to the root folder of the project"
    delete {
        "../${targetAarName}"
    }
    copy {
        from "${sourceAarPath}"
        into "../"
        rename("${sourceAarName}", "${targetAarName}")
    }
}

// This add a task that deploys a release build of the library to the sample projects /lib folders.
task zelloSdkAarDeployReleaseToSamples {
    description "Copies SDK AAR to all sample projects"
    delete {
        "../zello-sdk-sample/libs/${targetAarName}"
    }
    copy {
        from "${sourceAarPath}"
        into "../zello-sdk-sample/libs/"
        rename("${sourceAarName}", "${targetAarName}")
    }
    delete {
        "../zello-sdk-sample-contacts/libs/${targetAarName}"
    }
    copy {
        from "${sourceAarPath}"
        into "../zello-sdk-sample-contacts/libs/"
        rename("${sourceAarName}", "${targetAarName}")
    }
    delete {
        "../zello-sdk-sample-misc/libs/${targetAarName}"
    }
    copy {
        from "${sourceAarPath}"
        into "../zello-sdk-sample-misc/libs/"
        rename("${sourceAarName}", "${targetAarName}")
    }
    delete {
        "../zello-sdk-sample-ptt/libs/${targetAarName}"
    }
    copy {
        from "${sourceAarPath}"
        into "../zello-sdk-sample-ptt/libs/"
        rename("${sourceAarName}", "${targetAarName}")
    }
    delete {
        "../zello-sdk-sample-signin/libs/${targetAarName}"
    }
    copy {
        from "${sourceAarPath}"
        into "../zello-sdk-sample-signin/libs/"
        rename("${sourceAarName}", "${targetAarName}")
    }
}

task zelloSdkDocDelete(type: Delete) {
    description "Deletes Zello SDK Javadoc from the project root folder"
    delete "../docs/zello-sdk-documentation"
}

android.libraryVariants.all { variant ->
    if (variant.name == "release") {
        task zelloSdkDocCreate(type: Javadoc, dependsOn: "zelloSdkDocDelete") {
            title ""
            description "Creates Zello SDK Javadoc in the project root folder"
            destinationDir = new File("${projectDir}/../docs", "zello-sdk-documentation")
            source = android.sourceSets.main.java.srcDirs
            classpath = files("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar")
            exclude "**/Constants.java"
            exclude "**/ContactObserver*.java"
            options.memberLevel = JavadocMemberLevel.PUBLIC
            options.noTree = false
            options.noNavBar = false
            options.noIndex = false
            options.splitIndex = false
            options.use = false
            options.version = false
            options.author = false
            options.noDeprecated = true
            options.noDeprecatedList = true
            options.stylesheetFile = new File(projectDir, "../docs/stylesheet.css")
        }
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == "assembleRelease") {
        task.finalizedBy "zelloSdkDocCreate"
        task.finalizedBy "zelloSdkAarDeployReleaseToRoot"
        task.finalizedBy "zelloSdkAarDeployReleaseToSamples"
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        targetSdkVersion 30
        minSdkVersion 16
    }

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ["src"]
        }

        debug.setRoot("build-types/debug")
        release.setRoot("build-types/release")
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}
